/*
 * API SIMCA
 * SIMCA API Client
 *
 * OpenAPI spec version: 1.0.4
 * Contact: pdgsimca@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.AddPollutantDTO;
import io.swagger.client.model.ErrorDTO;
import io.swagger.client.model.PollutantDTO;
import io.swagger.client.model.PollutantsDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PollutantControllerApi
 */
@Ignore
public class PollutantControllerApiTest {

    private final PollutantControllerApi api = new PollutantControllerApi();

    
    /**
     * Create a pollutant
     *
     * Create a pollutant. Specify the correct measurement units
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPollutantUsingPOSTTest() throws ApiException {
        AddPollutantDTO addPollutantDTO = null;
        api.createPollutantUsingPOST(addPollutantDTO);

        // TODO: test validations
    }
    
    /**
     * Delete a pollutant
     *
     * Delete a pollutant by a given pollutant id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePollutantUsingDELETETest() throws ApiException {
        Integer idPollutant = null;
        api.deletePollutantUsingDELETE(idPollutant);

        // TODO: test validations
    }
    
    /**
     * Edit a pollutant
     *
     * Edit a pollutat with a given id. All values must be vaid
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editPollutantUsingPUTTest() throws ApiException {
        PollutantDTO pollutantDTO = null;
        api.editPollutantUsingPUT(pollutantDTO);

        // TODO: test validations
    }
    
    /**
     * Get a pollutant
     *
     * Get a pollutant by a given pollutant id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPollutantUsingGETTest() throws ApiException {
        Integer idPollutant = null;
        PollutantDTO response = api.getPollutantUsingGET(idPollutant);

        // TODO: test validations
    }
    
    /**
     * Get all pollutants
     *
     * Get all registered pollutants
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPollutantsUsingGETTest() throws ApiException {
        PollutantsDTO response = api.getPollutantsUsingGET();

        // TODO: test validations
    }
    
}
